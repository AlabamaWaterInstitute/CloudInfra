diff --git a/extern/SoilFreezeThaw/SoilFreezeThaw/forcing_code/src/bmi_aorc.c b/extern/SoilFreezeThaw/SoilFreezeThaw/forcing_code/src/bmi_aorc.c
index 059cf87..bd22f1e 100644
--- a/extern/SoilFreezeThaw/SoilFreezeThaw/forcing_code/src/bmi_aorc.c
+++ b/extern/SoilFreezeThaw/SoilFreezeThaw/forcing_code/src/bmi_aorc.c
@@ -480,7 +480,11 @@ int read_file_line_counts_aorc(const char* file_name, int* line_count, int* max_
         return -1;
     }
     int seen_non_whitespace = 0;
-    char c;
+    int c; //EOF is a negative constant...and char may be either signed OR unsigned
+         //depending on the compiler, system, achitectured, ect.  So there are cases
+         //where this loop could go infinite comparing EOF to unsigned char
+         //the return of fgetc is int, and should be stored as such!
+         //https://stackoverflow.com/questions/35356322/difference-between-int-and-char-in-getchar-fgetc-and-putchar-fputc
     for (c = fgetc(fp); c != EOF; c = fgetc(fp)) {
         // keep track if this line has seen any char other than space or tab
         if (c != ' ' && c != '\t' && c != '\n')
diff --git a/extern/SoilFreezeThaw/SoilFreezeThaw/forcing_code/src/bmi_pet.c b/extern/SoilFreezeThaw/SoilFreezeThaw/forcing_code/src/bmi_pet.c
index 0b74edf..279f054 100644
--- a/extern/SoilFreezeThaw/SoilFreezeThaw/forcing_code/src/bmi_pet.c
+++ b/extern/SoilFreezeThaw/SoilFreezeThaw/forcing_code/src/bmi_pet.c
@@ -497,7 +497,11 @@ int read_file_line_counts_pet(const char* file_name, int* line_count, int* max_l
         return -1;
     }
     int seen_non_whitespace = 0;
-    char c;
+    int c; //EOF is a negative constant...and char may be either signed OR unsigned
+         //depending on the compiler, system, achitectured, ect.  So there are cases
+         //where this loop could go infinite comparing EOF to unsigned char
+         //the return of fgetc is int, and should be stored as such!
+         //https://stackoverflow.com/questions/35356322/difference-between-int-and-char-in-getchar-fgetc-and-putchar-fputc
     for (c = fgetc(fp); c != EOF; c = fgetc(fp)) {
         // keep track if this line has seen any char other than space or tab
         if (c != ' ' && c != '\t' && c != '\n')
diff --git a/extern/cfe/cfe/forcing_code/src/bmi_aorc.c b/extern/cfe/cfe/forcing_code/src/bmi_aorc.c
index 059cf87..bd22f1e 100644
--- a/extern/cfe/cfe/forcing_code/src/bmi_aorc.c
+++ b/extern/cfe/cfe/forcing_code/src/bmi_aorc.c
@@ -480,7 +480,11 @@ int read_file_line_counts_aorc(const char* file_name, int* line_count, int* max_
         return -1;
     }
     int seen_non_whitespace = 0;
-    char c;
+    int c; //EOF is a negative constant...and char may be either signed OR unsigned
+         //depending on the compiler, system, achitectured, ect.  So there are cases
+         //where this loop could go infinite comparing EOF to unsigned char
+         //the return of fgetc is int, and should be stored as such!
+         //https://stackoverflow.com/questions/35356322/difference-between-int-and-char-in-getchar-fgetc-and-putchar-fputc
     for (c = fgetc(fp); c != EOF; c = fgetc(fp)) {
         // keep track if this line has seen any char other than space or tab
         if (c != ' ' && c != '\t' && c != '\n')
diff --git a/extern/cfe/cfe/forcing_code/src/bmi_pet.c b/extern/cfe/cfe/forcing_code/src/bmi_pet.c
index 9683115..ce2b486 100644
--- a/extern/cfe/cfe/forcing_code/src/bmi_pet.c
+++ b/extern/cfe/cfe/forcing_code/src/bmi_pet.c
@@ -497,7 +497,11 @@ int read_file_line_counts_pet(const char* file_name, int* line_count, int* max_l
         return -1;
     }
     int seen_non_whitespace = 0;
-    char c;
+    int c; //EOF is a negative constant...and char may be either signed OR unsigned
+         //depending on the compiler, system, achitectured, ect.  So there are cases
+         //where this loop could go infinite comparing EOF to unsigned char
+         //the return of fgetc is int, and should be stored as such!
+         //https://stackoverflow.com/questions/35356322/difference-between-int-and-char-in-getchar-fgetc-and-putchar-fputc
     for (c = fgetc(fp); c != EOF; c = fgetc(fp)) {
         // keep track if this line has seen any char other than space or tab
         if (c != ' ' && c != '\t' && c != '\n')
diff --git a/extern/cfe/cfe/src/bmi_cfe.c b/extern/cfe/cfe/src/bmi_cfe.c
index b85421e..29e8b7e 100644
--- a/extern/cfe/cfe/src/bmi_cfe.c
+++ b/extern/cfe/cfe/src/bmi_cfe.c
@@ -2814,7 +2814,11 @@ int read_file_line_counts_cfe(const char* file_name, int* line_count, int* max_l
         return -1;
     }
     int seen_non_whitespace = 0;
-    char c;
+    int c; //EOF is a negative constant...and char may be either signed OR unsigned
+         //depending on the compiler, system, achitectured, ect.  So there are cases
+         //where this loop could go infinite comparing EOF to unsigned char
+         //the return of fgetc is int, and should be stored as such!
+         //https://stackoverflow.com/questions/35356322/difference-between-int-and-char-in-getchar-fgetc-and-putchar-fputc
     for (c = fgetc(fp); c != EOF; c = fgetc(fp)) {
         // keep track if this line has seen any char other than space or tab
         if (c != ' ' && c != '\t' && c != '\n')
diff --git a/extern/evapotranspiration/evapotranspiration/forcing_code/src/bmi_aorc.c b/extern/evapotranspiration/evapotranspiration/forcing_code/src/bmi_aorc.c
index 8724829..f924c5d 100644
--- a/extern/evapotranspiration/evapotranspiration/forcing_code/src/bmi_aorc.c
+++ b/extern/evapotranspiration/evapotranspiration/forcing_code/src/bmi_aorc.c
@@ -480,7 +480,11 @@ int read_file_line_counts_aorc(const char* file_name, int* line_count, int* max_
         return -1;
     }
     int seen_non_whitespace = 0;
-    char c;
+    int c; //EOF is a negative constant...and char may be either signed OR unsigned
+         //depending on the compiler, system, achitectured, ect.  So there are cases
+         //where this loop could go infinite comparing EOF to unsigned char
+         //the return of fgetc is int, and should be stored as such!
+         //https://stackoverflow.com/questions/35356322/difference-between-int-and-char-in-getchar-fgetc-and-putchar-fputc
     for (c = fgetc(fp); c != EOF; c = fgetc(fp)) {
         // keep track if this line has seen any char other than space or tab
         if (c != ' ' && c != '\t' && c != '\n')
diff --git a/extern/evapotranspiration/evapotranspiration/src/bmi_pet.c b/extern/evapotranspiration/evapotranspiration/src/bmi_pet.c
index 9c72840..4d215ed 100644
--- a/extern/evapotranspiration/evapotranspiration/src/bmi_pet.c
+++ b/extern/evapotranspiration/evapotranspiration/src/bmi_pet.c
@@ -510,7 +510,11 @@ int read_file_line_counts_pet(const char* file_name, int* line_count, int* max_l
         return -1;
     }
     int seen_non_whitespace = 0;
-    char c;
+    int c; //EOF is a negative constant...and char may be either signed OR unsigned
+         //depending on the compiler, system, achitectured, ect.  So there are cases
+         //where this loop could go infinite comparing EOF to unsigned char
+         //the return of fgetc is int, and should be stored as such!
+         //https://stackoverflow.com/questions/35356322/difference-between-int-and-char-in-getchar-fgetc-and-putchar-fputc
     for (c = fgetc(fp); c != EOF; c = fgetc(fp)) {
         // keep track if this line has seen any char other than space or tab
         if (c != ' ' && c != '\t' && c != '\n')
